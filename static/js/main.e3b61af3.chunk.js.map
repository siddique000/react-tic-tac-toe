{"version":3,"sources":["component/square.jsx","component/board.jsx","component/game.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","setState","concat","jumpTo","step","this","current","winner","moves","map","move","desc","status","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3b61af3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\nexport default Square;","import React from 'react'\r\nimport Square from './square'\r\n\r\nfunction Board(props) {\r\n\r\n    const renderSquare = (i) => <Square\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n    />\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Board;","import React, { Component } from 'react'\r\nimport Board from './board'\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i]\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport default class Game extends Component {\r\n    state = {\r\n        history: [{ squares: Array(9).fill(null) }],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n    }\r\n\r\n\r\n    handleClick = (i) => {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice()\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history: history.concat([{ squares }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n\r\n    };\r\n\r\n    jumpTo = (step) => {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: step % 2 === 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[this.state.stepNumber]\r\n        const winner = calculateWinner(current.squares)\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to move a' + move : 'Go to game start'\r\n\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        })\r\n        let status = ''\r\n        if (winner) {\r\n            status = 'Winner is ' + winner\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n\r\n        }\r\n\r\n        return (\r\n            <div className='game'>\r\n                <div className=\"game-board\">\r\n                    <Board squares={current.squares} onClick={this.handleClick} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status }</div>\r\n                    <ol>\r\n                        {moves}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Game from './component/game'\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Tic Tac Toe</h1>\r\n\r\n            <Game/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}